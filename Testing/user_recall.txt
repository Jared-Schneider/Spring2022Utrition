\connect utrition_final

------------------------- prerequisite insert statements so test cases satisfy foreign key constraint -------------------------
-- 5 prerequisite INSERTs

INSERT INTO users (id, first_name, last_name, email) VALUES (0, 'first0', 'last0', 'email0@gmail.com');
INSERT INTO users (id, first_name, last_name, email) VALUES (1, 'first1', 'last1', 'email1@gmail.com');
INSERT INTO users (id, first_name, last_name, email) VALUES (2, 'first2', 'last2', 'email2@gmail.com');
INSERT INTO users (id, first_name, last_name, email) VALUES (3, 'first3', 'last3', 'email3@gmail.com');
INSERT INTO users (id, first_name, last_name, email) VALUES (-7, 'first7', 'last7', 'email7@gmail.com');


----------------------------- passing test cases ------------------------------------

-- 5 pass test cases
-- pass
INSERT INTO user_recall (recall_id,user_id) VALUES (1,1);

-- pass
INSERT INTO user_recall (recall_id,user_id) VALUES (2,1);

-- pass
INSERT INTO user_recall (recall_id,user_id) VALUES (3,2);

-- pass
INSERT INTO user_recall (recall_id,user_id) VALUES (4,3);

-- check (recall_id) type serial which can be negative, pass
INSERT INTO user_recall (recall_id,user_id) VALUES (-5,2);

------------------------------------ fail test cases ----------------------------------

-- 6 fail test cases

-- check non null constraint on primary key (recall_id), fail
INSERT INTO user_recall (recall_id,user_id) VALUES (null,3);

-- check non null constraint on (user_id), fail
INSERT INTO user_recall (recall_id,user_id) VALUES (5,null);

-- check (user_id) < 1, which is foreign key to serial type, fail
INSERT INTO user_recall (recall_id,user_id) VALUES (6,0);

-- check (user_id) < 1, which is foreign key to serial type, fail
INSERT INTO user_recall (recall_id,user_id) VALUES (7,-7);

-- check missing value for primary key (recall_id), fail
INSERT INTO user_recall (recall_id,user_id) VALUES (,1);

-- check missing value for (user_id), fail
INSERT INTO user_recall (recall_id,user_id) VALUES (8,);


